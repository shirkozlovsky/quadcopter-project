function Out = gen_SingleRotorModel(In)
% Asuming Superposition of two single rotors
% beta_0 = beta_1c = beta_1s = 0;
Theta_0 = In.Theta_0;
Omega = abs(In.Omega);
Vinduced = In.Vinduced;
Theta_1s = In.Theta_1s;
Theta_1c = In.Theta_1c;
U = In.U;
R = In.R;
N = In.N;
c = In.c;
a = In.a;
Theta_tw1 = In.Theta_tw1;
Cd = In.Cd;
Sigma = N*c/(pi*R);
OmegaTimesR = Omega*R;
% OmegaTimesR = div_protect(OmegaTimesR);
Lambda = Vinduced/(OmegaTimesR );
Miu = U / (OmegaTimesR );
Miu2 = Miu*Miu;
CT_0 = (Sigma*a/2)*(Theta_0/3 - Lambda/2);
CT_1 = (Sigma*a/4)*Theta_1s;
CT_2 = (Sigma*a/4)*(Theta_0 + Theta_tw1/4);
CX_0 = -(Sigma*a/4)*(Lambda/2)*Theta_1s;
CX_1 = -(Sigma*a/4)*((Theta_0 + Theta_tw1/4)*Lambda + Cd/a);
CX_2 = 0;
CY_0 = (Sigma*a/2)*(Lambda/4)*Theta_1c;
CY_1 = 0;
CY_2 = 0;
CMX_0 = -(Sigma*a/2)*(Theta_1s/8);
CMX_1 = -(Sigma*a/2)*((Theta_0/3) - (Lambda/4));
CMX_2 = -(Sigma*a/2)*(3*Theta_1s/16);
CMY_0 = (Sigma*a/2)*(Theta_1c/8);
CMY_1 = 0;
CMY_2 = (Sigma*a/2)*(Theta_1c/16);
CMZ_0 = -(Sigma*a/2)*((0.25*Cd/a) +(Lambda*Theta_0/3) - (Lambda*Lambda/2));
CMZ_1 = -(Sigma*a/2)*(Lambda*Theta_1s/4);
CMZ_2 = -(Sigma*a/2)*(0.25*Cd/a);
CT = CT_0 + CT_1*Miu + CT_2*Miu2;
CX = CX_0 + CX_1*Miu + CX_2*Miu2;
CY = CY_0 + CY_1*Miu + CY_2*Miu2;
CMX = CMX_0 + CMX_1*Miu + CMX_2*Miu2;
CMY = CMY_0 + CMY_1*Miu + CMY_2*Miu2;
CMZ = CMZ_0 + CMZ_1*Miu + CMZ_2*Miu2;
Out.Coef.CT = CT;
Out.Coef.CX = CX;
Out.Coef.CY = CY*sign(In.Omega);
Out.Coef.CMX = CMX*sign(In.Omega);
Out.Coef.CMY = CMY;
Out.Coef.CMZ = CMZ*sign(In.Omega);
%rho = 1.225;
rho = In.rho;
R = In.R;
% Out.FaM.FZ = pi*rho*(Omega^2)*(R^4)*Out.Coef.CT;
% Out.FaM.FX = pi*rho*(Omega^2)*(R^4)*Out.Coef.CX;
% Out.FaM.FY = pi*rho*(Omega^2)*(R^4)*Out.Coef.CY;
% Out.FaM.MX = pi*rho*(Omega^2)*(R^5)*Out.Coef.CMX;
% Out.FaM.MY = pi*rho*(Omega^2)*(R^5)*Out.Coef.CMY;
% Out.FaM.MZ = pi*rho*(Omega^2)*(R^5)*Out.Coef.CMZ;
W_bar = (In.W)/OmegaTimesR;
% U = In.U;
% Miu = U / (OmegaDn*R);
% CT = Out.OutDn.Coef.CT;
F = (Lambda - W_bar)*2*sqrt(Lambda*Lambda + Miu*Miu) - CT;
Out.F = F;